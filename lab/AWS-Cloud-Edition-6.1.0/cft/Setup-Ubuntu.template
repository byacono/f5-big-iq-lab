{
  "AWSTemplateFormatVersion": "2010-09-09",

  "Description": "This will deploy the Ubuntu HTTP server instances to use lab.",

  "Parameters": {
    "REGION": {
            "Type": "String"
    },
    "VPCID": {
            "Type": "String"
    },
    "EC2NAME": {
            "Type": "String"
    },
    "KEYNAME": {
            "Type": "String"
    },
    "INTERNALSUB" : {
            "Type": "String"
    },
    "InstanceType": {
            "Type": "String",
            "Default": "t2.small"
    },
    "EBSVolumeSize": {
            "Type": "String",
            "Default": "40"
    },
    "UBUNTUIPADDRESS" : {
            "Type": "String"
    }
  },

  "Mappings": {
    "AWSInstanceType2Arch" : {
      "t2.small" : {"Arch" : "64" }
    },
   "AWSRegionArch2AMI": {
      "us-east-1": {
        "64": "ami-43a15f3e"
      },
      "us-east-2": {
        "64": "ami-916f59f4"
      },
      "us-west-1": {
        "64": "ami-925144f2"
      },
      "us-west-2": {
        "64": "ami-4e79ed36"
      },
      "eu-central-1": {
        "64": "ami-7c412f13"
      },
      "eu-west-1": {
        "64": "ami-f90a4880"
      },
      "eu-west-2": {
        "64": "ami-f4f21593"
      },
      "eu-west-3": {
        "64": "ami-041e7189b2a6677a5"
      },
      "ap-southeast-2": {
        "64": "ami-d38a4ab1"
      },
      "ap-southeast-1": {
        "64": "ami-52d4802e"
      },
      "ap-northeast-1": {
        "64": "ami-0d74386b"
      },
      "ap-northeast-2": {
        "64": "ami-a414b9ca"
      },
      "ap-south-1": {
        "64": "ami-0189d76e"
      },
      "sa-east-1": {
        "64": "ami-423d772e"
      },
      "ca-central-1": {
        "64": "ami-ae55d2ca"
      }
    }
  },

  "Resources": {
    "InstanceSecurityGroup": {
      "Type": "AWS::EC2::SecurityGroup",
      "Properties": {
        "VpcId": {
          "Ref": "VPCID"
        },
        "GroupDescription": "Enable remote access via port SSH (22), HTTPS (443) and HTTP (80)",
        "SecurityGroupIngress": [
          {
            "IpProtocol": "icmp",
            "FromPort": "-1",
            "ToPort": "-1",
            "CidrIp": "0.0.0.0/0"
          },
          {
            "IpProtocol": "tcp",
            "FromPort": "22",
            "ToPort": "22",
            "CidrIp": "0.0.0.0/0"
          },
          {
            "IpProtocol": "tcp",
            "FromPort": "80",
            "ToPort": "80",
            "CidrIp": "0.0.0.0/0"
          },
          {
            "IpProtocol": "tcp",
            "FromPort": "443",
            "ToPort": "443",
            "CidrIp": "0.0.0.0/0"
          }
        ]
      }
    },
    "HTTPServer": {
      "Type": "AWS::EC2::Instance",
      "Metadata": {
        "AWS::CloudFormation::Init" : {
          "config": {
            "command" : {
              "a_update_apt": { "command": "apt-get -y update" }
            }
          }
        }
      },
      "Properties": {
        "ImageId": {
         "Fn::FindInMap": [
           "AWSRegionArch2AMI",
           {
             "Ref": "AWS::Region"
           },
           {
             "Fn::FindInMap": [
               "AWSInstanceType2Arch",
               {
                 "Ref": "InstanceType"
               },
               "Arch"
              ]
           }
          ]
        },
        "InstanceType": {
          "Ref": "InstanceType"
        },
        "BlockDeviceMappings" : [{
                "DeviceName" : "/dev/sda1",
                "Ebs" : {"VolumeSize" : {"Ref" : "EBSVolumeSize"}}
        }],
        "KeyName": {
          "Ref": "KEYNAME"
        },
        "Tags": [
          {
            "Key": "Server Instance",
            "Value": {
              "Ref": "AWS::StackId"
            }
          },
          {
            "Key": "Name",
            "Value": {"Ref" : "EC2NAME"}
          }
        ],
        "UserData" : { "Fn::Base64" : { "Fn::Join" : ["", [
            "#!/bin/bash -xe\n",

            "# Install the files and packages from the metadata\n",
            "apt-get -y update\n",
            "apt-get -y install python-setuptools docker.io apache2-utils\n",
            "docker run --restart=unless-stopped --name=f5-hello-world-blue -dit -p 8081:8080 -p 443:8443 -e NODE='Blue' f5devcentral/f5-hello-world\n",
            "docker run --restart=unless-stopped --name=f5-hello-world-green -dit -p 8082:8080 -p 444:8443 -e NODE='Green' f5devcentral/f5-hello-world\n",
            "docker run --restart=unless-stopped --name=dvwa -d -p 8080:80 infoslack/dvwa\n",
            "docker run --restart=unless-stopped --name=hackazon -d -p 80:80 mutzel/all-in-one-hackazon:postinstall supervisord -n\n",
            "docker run --restart=unless-stopped --name=app-sec -dit -p 445:8443 artioml/f5-app-sec\n",
            "easy_install https://s3.amazonaws.com/cloudformation-examples/aws-cfn-bootstrap-latest.tar.gz\n",
            "cfn-init -v ",
            "         --stack ", { "Ref" : "AWS::StackName" },
            "         --resource HTTPServer ",
            "         --region ", { "Ref" : "AWS::Region" },
            "\n",
            "# Signal the status from cfn-init\n",
            "cfn-signal -e $? ",
            "         --stack ", { "Ref": "AWS::StackName" },
            "         --resource HTTPServer ",
            "         --region ", { "Ref": "AWS::Region" },
            "\n"
        ]]}},
        "NetworkInterfaces": [
          {
            "GroupSet": [
              {
                "Ref": "InstanceSecurityGroup"
              }
            ],
            "Description": "Server:Internal",
            "AssociatePublicIpAddress": "true",
            "DeviceIndex": "0",
            "DeleteOnTermination": "true",
            "SubnetId": {
              "Ref": "INTERNALSUB"
            },
            "PrivateIpAddresses": [
              {
                "PrivateIpAddress": { "Ref": "UBUNTUIPADDRESS" },
                "Primary": "true"
              }
            ]
          }
        ]
      },
      "CreationPolicy": {
          "ResourceSignal": {
              "Timeout": "PT15M"
          }
      }
    },

  },

  "Outputs": {
    "Region" : {
      "Description" : "AWS Region",
      "Value" : { "Ref" : "AWS::Region" }
    },
    "UBUNTUIPADDRESS" : {
      "Description" : "IP Address",
      "Value" : { "Ref" : "UBUNTUIPADDRESS" }
    }
  }
}
